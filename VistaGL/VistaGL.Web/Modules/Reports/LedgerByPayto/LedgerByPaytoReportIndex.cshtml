@model VistaGL.Modules.Reports.ReportSearchViewModel
@{
    ViewBag.Title = "Ledger by Payto";
}

<!-- general form elements -->
<div class="box box-primary">
    <div class="box-header with-border grid-title">
        <div class="title-text">Ledger By Payto</div>
    </div><!-- /.box-header -->
    <!-- form start -->
    @using (Html.BeginForm("Index", "LedgerByPayto", FormMethod.Post, new { @id = "frm" }))
    {
        <div class="box-body">
            <div class="row">
                <div class="col-sm-12">
                    @if (!string.IsNullOrEmpty(Model.Message))
                    {
                        <div style="color:Red" class="@Model.ErrMsgClass">
                            @Model.Message<br />
                        </div>
                    }
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">


                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.Label("Entity", new { @class = "control-label" }) <label class="required-field">*</label>
                                @Html.DropDownListFor(m => m.FundcontrolId, Model.Fundcontrol, "Select One", new { @class = "form-controlForDDL required ddl" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-11">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ZoneInfoList, new { @class = "control-label " })
                                <label class="required-field">*</label>
                                &nbsp;&nbsp;<input type="checkbox" id="chkSelectAllZone">&nbsp;Select All Zone&nbsp;
                                <br />
                                @Html.DropDownList("ZoneItem", Model.Zone, "", new { @class = "required ddl col-sm-12", @multiple = "multiple" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FromDate, new { @class = "control-label" }) <label class="required-field">*</label>
                                @Html.TextBoxFor(model => model.FromDate, new { @class = "fixed-rpt-date form-control required date" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ToDate, new { @class = "control-label" }) <label class="required-field">*</label>
                                @Html.TextBoxFor(model => model.ToDate, new { @class = "fixed-rpt-date form-control required date" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.Label("Account Head", new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.COAId, Model.COAChild, "Select One", new { @class = "form-controlForDDL ddl" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.Label("Sub Ledger", new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.CostCenterId, Model.CostCenterList, "Select One", new { @class = "form-controlForDDL ddl" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.PaytoList, new { @class = "control-label" }) <label class="required-field">*</label>
                                <br />
                                @Html.DropDownList("paytos", Model.PaytoList, "", new { @class = "required ddl style-AccHeadType", @multiple = "multiple" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>




            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.CheckBoxFor(model => model.IsWithNarration)&nbsp;@Html.LabelFor(model => model.IsWithNarration) <br />
                        @Html.CheckBoxFor(model => model.IsWithPayto)&nbsp;@Html.LabelFor(model => model.IsWithPayto) <br />
                    </div>
                </div>
            </div>


        </div>

        <div class="box-footer">
            @Html.HiddenFor(m => m.pZoneName)
            @Html.HiddenFor(m => m.pEntityName)
            @Html.HiddenFor(m => m.ZoneInfoList)
            @Html.HiddenFor(m => m.strPayTo)
            @Html.HiddenFor(m => m.IsWithNarration)
            <button type="submit" id="btnSubmit" class="btn btn-primary"><i class="fa fa-search"></i> Preview</button>
        </div>
        if (!Model.IsError)
        {
            <div class="row">
                <div class="form-group clearfix">
                    <div class="col-md-12 col-lg-12">
                        @Html.Partial("ReportsViewer")
                        <iframe src="~/ReportViewers/myLedgerSubLedgerReportsViewer.aspx" width="100%" height="100%" style="border: none; min-height: 1500px;"></iframe>
                    </div>
                </div>
            </div>
        }
    }
</div><!-- /.box -->

<style>
    .fixed-rpt-date {
        width: 88% !important;
    }

    .style-AccHeadType {
        width: 95% !important;
    }
</style>
<script type="text/javascript">

    $(function () {
        $(".ddl").select2({
            //
            placeholder: {
                id: '-1', // the value of the option
                text: 'Select One'
            },
            allowClear: true
        });

        //--***

        $("#chkSelectAllZone").click(function () {
            if ($("#chkSelectAllZone").is(':checked')) {
                //
                $("#ZoneItem > option[value!='']").prop("selected", "selected");
                $("#ZoneItem").trigger("change");
                //
            } else {
                //
                $('#ZoneItem').val(null).trigger('change');

                $('#ZoneItem').select2().select2('val', _ZoneInfoList);
            }
        });

        $(".date").datepicker();

        d = new Date();
        date = d.format("dd-MM-yyyy");
        if ($('#FromDate').val() == '') {
            $('#FromDate').val(date);
            $('#ToDate').val(date);
        }

        //--***
        var _ZoneInfoList = $("#ZoneInfoList").val().split(',');
        $('#ZoneItem').select2().select2('val', _ZoneInfoList);

        //--***
        var _payToList = $("#strPayTo").val().split(',').filter(function (item) {
            return item.length != 0;
        });
        $('#paytos').select2().select2('val', _payToList);

        //--***

        $("#btnSubmit").click(function () {
            $("#pEntityName").val($("#FundcontrolId :selected").text());
            //$("#pAccountHead").val($("#COAId :selected").text());

            var option_ZoneItem = $("#ZoneItem option:selected").map(function () {
                return $(this).text();
            }).get().join(', ');
            $("#pZoneName").val(option_ZoneItem);

            var zone = $('#ZoneItem').val().toString();
            $("#ZoneInfoList").val(zone);

            var paytos = $('#paytos').val().toString();
            $("#strPayTo").val(paytos);

            return fnValidate();
        });
    });

</script>
